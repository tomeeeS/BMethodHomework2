THEORY BalanceX IS
  stock_i,123,10,0,97,14,0,0;
  AssertionLemmas,1,1,0,0,0,0,0;
  GetRequiredAmount,2,0,0,2,0,0,0;
  GetSum,10,2,0,7,1,0,0;
  Initialisation,10,0,0,8,2,0,0;
  Pop,21,2,0,16,2,0,0;
  Put,21,2,0,16,2,0,0;
  ValuesLemmas,1,1,0,0,0,0,0;
  WellDefinednessAssertions,4,0,0,3,1,0,0;
  WellDefinedness_GetRequiredAmount,2,0,0,2,0,0,0;
  WellDefinedness_GetSum,5,0,0,5,0,0,0;
  WellDefinedness_Pop,23,1,0,19,3,0,0;
  WellDefinedness_Put,23,1,0,19,3,0,0
END
&
THEORY ProofState IS
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(Util);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(1);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(1);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(1);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(Util);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(1);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(1);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(1);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(1);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(1);
  Proved(0);
  Proved(0);
  Proved(Util);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(Util);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(1);
  Unproved;
  Proved(0);
  Proved(1);
  Proved(0);
  Proved(0);
  Proved(Util);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(Util);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(1);
  Unproved;
  Proved(0);
  Proved(1);
  Proved(0);
  Proved(0);
  Proved(Util);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(Util);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(1);
  Proved(0);
  Proved(1);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(Util);
  Proved(Util)
END
&
THEORY MethodList IS
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  dd & eh(cCurrentStocks$1,_h,Goal) & pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  dd & eh(cCurrentStocks$1,_h,Goal) & pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  dd & eh(cCurrentStocks$1,_h,Goal) & eh(sum$2,_h,Goal) & eh(cCurrentStocks$1,_h,Goal) & ah(1..ii$2/\{ii$2+1} = {}) & pr & ah(1..ii$2+1 = 1..ii$2\/ii$2+1..ii$2+1) & pr & p1 & dd & dd & ah(1..ii$2+1 = 1..ii$2\/ii$2+1..ii$2+1 => (1..ii$2/\{ii$2+1} = {} => SIGMA(xx).(xx: 1..ii$2 | CurrentStocks(xx))+CurrentStocks(ii$2+1) = SIGMA(xx).(xx: 1..ii$2\/{ii$2+1} | CurrentStocks(xx)))) & ar(s1.3,Goal) & pr & ar(s1.3,Goal) & dd & eh(1..ii$2+1,_h,Goal) & ah(SIGMA(xx).(xx: 1..ii$2\/ii$2+1..ii$2+1 | CurrentStocks(xx)) = SIGMA(xx).(xx: 1..ii$2 | CurrentStocks(xx))+CurrentStocks(ii$2+1)) & ah(CurrentStocks(ii$2+1) = SIGMA(xx).(xx: {ii$2+1} | CurrentStocks(xx))) & pr & dd & eh(CurrentStocks(ii$2+1),_h,Goal) & ah(SIGMA(xx).(xx: 1..ii$2\/{ii$2+1} | CurrentStocks(xx)) = SIGMA(xx).(xx: 1..ii$2 | CurrentStocks(xx))+SIGMA(xx).(xx: {ii$2+1} | CurrentStocks(xx))) & ar(s1.3,Goal) & pr & dd & pr & dd & eh(SIGMA(xx).(xx: 1..ii$2 | CurrentStocks(xx))+CurrentStocks(ii$2+1),_h,Goal) & eh(SIGMA(xx).(xx: 1..ii$2\/ii$2+1..ii$2+1 | CurrentStocks(xx)),_h,Goal) & pr;
  pr;
  pr;
  pr;
  dd & pr & pr & ar(s1.6,Goal) & pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  ?;
  pr;
  pr;
  pr;
  pr;
  dd & eh(CurrentStocks,_h,Goal) & pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  dd & eh(cCurrentStocks$1,_h,Goal) & pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  ?;
  pr;
  pr;
  pr;
  pr;
  dd & eh(CurrentStocks,_h,Goal) & pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  dd & eh(cCurrentStocks$1,_h,Goal) & pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  dd & ah({xx | xx: dom(cCurrentStocks$1) & cCurrentStocks$1(xx)+1<=MaxStocks(xx)/2} <: dom(cShortages$1|>{TRUE})) & pr & dd & ah(dom(cShortages$1|>{TRUE}) <: {xx | xx: dom(cCurrentStocks$1) & cCurrentStocks$1(xx)+1<=MaxStocks(xx)/2}) & eh(MaxStocks,_h,Goal) & eh(CurrentStocks,_h,AllHyp) & dd & eh(cCurrentStocks$1,_h,Goal) & ah(!xx.(xx: dom(cShortages$1|>{TRUE}) => 0<= -1-CurrentStocks(xx)+{1|->1000,2|->2000,3|->500,4|->125,5|->4000}(xx)/2 & CurrentStocks(xx)+1<={1|->1000,2|->2000,3|->500,4|->125,5|->4000}(xx)/2)) & dd & ah(!xx.(xx: dom(cShortages$1|>{TRUE}) => CurrentStocks(xx)+1<={1|->1000,2|->2000,3|->500,4|->125,5|->4000}(xx)/2)) & pr & dd & ah(!xx.(xx: dom(cShortages$1|>{TRUE}) => xx: dom(CurrentStocks) & CurrentStocks(xx)+1<={1|->1000,2|->2000,3|->500,4|->125,5|->4000}(xx)/2)) & ah(!xx.(xx: dom(cShortages$1|>{TRUE}) => CurrentStocks(xx)+1<={1|->1000,2|->2000,3|->500,4|->125,5|->4000}(xx)/2)) & ah(dom(CurrentStocks) = dom(cShortages$1)) & pr & pr & pr & dd & ah({xx | xx: dom(cCurrentStocks$1) & cCurrentStocks$1(xx)+1<=MaxStocks(xx)/2} <: dom(cShortages$1|>{TRUE}) & dom(cShortages$1|>{TRUE}) <: {xx | xx: dom(cCurrentStocks$1) & cCurrentStocks$1(xx)+1<=MaxStocks(xx)/2}) & pr & pr & dd & ah(dom(cShortages$1|>{TRUE}) <: {xx | xx: dom(cCurrentStocks$1) & cCurrentStocks$1(xx)+1<=MaxStocks(xx)/2} & {xx | xx: dom(cCurrentStocks$1) & cCurrentStocks$1(xx)+1<=MaxStocks(xx)/2} <: dom(cShortages$1|>{TRUE})) & pr & pr & dd & ar(GenEqualityX.5,Fwd);
  dd & pr & p0 & pr & pr & pr & p0 & pr & pr & pr & p0 & pr & pr & pp & pp & pr
END
&
THEORY PassList IS
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),(?;0;1;2);
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(1),(?;0);
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(1),(?;0);
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(1),(?;0);
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),(?;0;1;2);
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(1),(?;0);
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(1),(?;0);
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(1),(?;0);
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(1),(?;0);
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(1),(?;0);
  Force(0),?;
  Force(0),?;
  Force(0),(?;0;1;2);
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),(?;0;1;2);
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(1),(?;0);
  Force(0),(?;0;1;2);
  Force(0),?;
  Force(1),(?;0);
  Force(0),?;
  Force(0),?;
  Force(0),(?;0;1;2);
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),(?;0;1;2);
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(1),(?;0);
  Force(0),(?;0;1;2);
  Force(0),?;
  Force(1),(?;0);
  Force(0),?;
  Force(0),?;
  Force(0),(?;0;1;2);
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),(?;0;1;2);
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(1),(?;0);
  Force(0),?;
  Force(1),(?;0);
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),(?;0;1;2);
  Force(0),(?;0;1;2)
END
&
THEORY ManForms 
END
&
THEORY Version IS
  PRVersion("svn")(CLT == "svn")
END
