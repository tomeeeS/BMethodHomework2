/*
Sajti Tamas
CWXY37
*/

IMPLEMENTATION stock_i
REFINES stock

DEFINITIONS
    "definitions.def"

IMPORTS
    forklift ,
    shortage_classifier

VALUES
    MaxStocks = {
        1 |-> 1000 ,
        2 |-> 2000 ,
        3 |-> 500 ,
        4 |-> 125 ,
        5 |-> 4000
    }

CONCRETE_VARIABLES
    cCurrentStocks , cShortages , cRequiredAmounts

INVARIANT
    // types
    cCurrentStocks : STOCKS --> NUM_OF_STOCK_TYPE
    & cRequiredAmounts : STOCKS --> NUM_OF_STOCK_TYPE
    & cShortages : ( 1 .. 5 ) --> BOOL

    // ties to abstract variables
    & cCurrentStocks = CurrentStocks
    & cRequiredAmounts = RequiredAmounts
    & dom ( cShortages |> { TRUE } ) = Shortages
    & dom ( cShortages |> { FALSE } ) = ( STOCKS ) - Shortages
    /*& !xx.(xx : Shortages =>
        cShortages(xx) = TRUE)
    & !xx.(xx : (STOCKS - Shortages) =>
        cShortages(xx) = FALSE)*/

    // cCurrentStocks
    & dom ( cCurrentStocks ) = dom ( MaxStocks )
    & ! ii . ( ii : dom ( cCurrentStocks ) => cCurrentStocks ( ii ) <= MaxStocks ( ii ) )

    // cShortages
    & ! xx . ( xx : dom ( cShortages |> { TRUE } ) =>
        cCurrentStocks ( xx ) < MaxStocks ( xx ) / 2 )
    & ! xx . ( ( xx : dom ( cCurrentStocks ) & cCurrentStocks ( xx ) < MaxStocks ( xx ) / 2 ) =>
        xx : dom ( cShortages |> { TRUE } ) )

    // cRequiredAmounts
    & ! ii . ( ii : dom ( cRequiredAmounts ) => cRequiredAmounts ( ii ) = MaxStocks ( ii ) - cCurrentStocks ( ii ) )

INITIALISATION
    cCurrentStocks := STOCKS * { 0 } ;
    cShortages := STOCKS * { TRUE } ;
    cRequiredAmounts := MaxStocks

OPERATIONS

    Put ( ii , amt ) = //Feladat1
    BEGIN
        VAR currentTmp , requiredTmp , shortageTmp IN

            shortageTmp <-- IsOnShortage (
                cShortages ,
                cCurrentStocks ,
                ii ,
                amt ,
                MaxStocks
            ) ;

            currentTmp , requiredTmp <--
                BringIntoWarehouse ( cCurrentStocks ( ii ) , amt , MaxStocks ( ii ) ) ;

            cCurrentStocks ( ii ) := currentTmp ;
            cRequiredAmounts ( ii ) := requiredTmp ;
            cShortages := shortageTmp
        END
    END
    ;

/*
    Pop (ii, amt ) = //Feladat2
    BEGIN
        cCurrentStocks(ii) := cCurrentStocks(ii) - amt;
        cRequiredAmounts(ii) := MaxStocks(ii) - (cCurrentStocks(ii) - amt);
        cShortages := {xx | xx : dom(cCurrentStocks) & (cCurrentStocks<+{ii|->cCurrentStocks(ii)-amt})(xx) < MaxStocks(xx) / 2}
    END
    ;

    */


    res <-- GetShortage = //Feladat3
        res := cShortages
/*
    ;


    sum <-- GetSum = //Feladat4
    BEGIN
        sum := SIGMA ( xx ) . ( xx : dom( cCurrentStocks ) | cCurrentStocks ( xx ) )
    END
    ;

    res <-- GetRequiredAmount(ii) = // Feladat5
    BEGIN
       res := cRequiredAmounts(ii)
    END

    */
 END
