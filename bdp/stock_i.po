THEORY ProofList IS
_f(1) & _f(5) & _f(6) & Initialisation.5,(_f(7) & _f(15) => _f(16));
_f(1) & _f(5) & _f(6) & Initialisation.4,(_f(7) & _f(13) => _f(14));
_f(1) & _f(5) & _f(6) & Initialisation.3,(_f(7) & _f(11) => _f(12));
_f(1) & _f(5) & _f(6) & Initialisation.2,(_f(7) & _f(9) => _f(10));
_f(1) & _f(5) & _f(6) & Initialisation.1,(_f(7) => _f(8));
_f(1) & _f(2) & ValuesLemmas.1,(_f(3) => _f(4))
END
&
THEORY Formulas IS
((NAT) = (((0) .. (2147483647)))) & ((INT) = (((-2147483648) .. (2147483647))));
btrue;
"Valuation is correct";
((({((1) |-> (1000))}\/{((2) |-> (2000))}\/{((3) |-> (500))}\/{((4) |-> (125))}\/{((5) |-> (4000))})) : (((((1) .. (5))) --> (((0) .. (4000))))));
MaxStocks : ((1) .. (5)) +-> ((0) .. (4000)) & dom(MaxStocks) = ((1) .. (5)) & ((MaxStocks) : (((((1) .. (5))) --> (((0) .. (4000)))))) & ((MaxStocks) = (({((1) |-> (1000))}\/{((2) |-> (2000))}\/{((3) |-> (500))}\/{((4) |-> (125))}\/{((5) |-> (4000))})));
((MaxStocks) = (({((1) |-> (1000))}\/{((2) |-> (2000))}\/{((3) |-> (500))}\/{((4) |-> (125))}\/{((5) |-> (4000))})));
"Refinement is correct";
(((((1) .. (5)) * ({0}))) : (((((1) .. (5))) --> (({0})))));
"Check invariant ((cCurrentStocks$1) : (((((1) .. (5))) --> (((0) .. (4000))))))";
(((((1) .. (5)) * ({0}))) : (((((1) .. (5))) --> (((0) .. (4000))))));
"Check invariant ((cShortages$1) : (((((1) .. (5))) --> (BOOL))))";
(((((1) .. (5)) * ({TRUE}))) : (((((1) .. (5))) --> (BOOL))));
"Check invariant ((dom(((cShortages$1) |> (({TRUE}))))) = (Shortages))";
((dom((((((1) .. (5)) * ({TRUE}))) |> (({TRUE}))))) = (((1) .. (5))));
"Check invariant ((dom(((cShortages$1) |> (({FALSE}))))) = ((((1) .. (5)) - Shortages)))";
((dom((((((1) .. (5)) * ({TRUE}))) |> (({FALSE}))))) = ((((1) .. (5)) - ((1) .. (5)))));
CurrentStocks : ((1) .. (5)) +-> ((0) .. (4000)) & dom(CurrentStocks) = ((1) .. (5)) & ((CurrentStocks) : (((((1) .. (5))) --> (((0) .. (4000)))))) & ((Shortages) : (FIN(((1) .. (5))))) & RequiredAmounts : ((1) .. (5)) +-> ((0) .. (4000)) & dom(RequiredAmounts) = ((1) .. (5)) & ((RequiredAmounts) : (((((1) .. (5))) --> (((0) .. (4000)))))) & ((dom(CurrentStocks)) = (dom(MaxStocks)));
cCurrentStocks$1 : ((1) .. (5)) +-> ((0) .. (4000)) & dom(cCurrentStocks$1) = ((1) .. (5)) & ((cCurrentStocks$1) : (((((1) .. (5))) --> (((0) .. (4000)))))) & cRequiredAmounts$1 : ((1) .. (5)) +-> ((0) .. (4000)) & dom(cRequiredAmounts$1) = ((1) .. (5)) & ((cRequiredAmounts$1) : (((((1) .. (5))) --> (((0) .. (4000)))))) & cShortages$1 : ((1) .. (5)) +-> BOOL & dom(cShortages$1) = ((1) .. (5)) & ((cShortages$1) : (((((1) .. (5))) --> (BOOL)))) & ((cCurrentStocks$1) = (CurrentStocks)) & ((dom(((cShortages$1) |> (({TRUE}))))) = (Shortages)) & ((dom(((cShortages$1) |> (({FALSE}))))) = ((((1) .. (5)) - Shortages))) & ((cRequiredAmounts$1) = (RequiredAmounts));
((res) = (res));
((res$1) = (res));
((dom(((cShortages$1) |> (({FALSE}))))) = ((((1) .. (5)) - Shortages)));
((dom(((cShortages$1) |> (({TRUE}))))) = (Shortages));
((cCurrentStocks$1) = (CurrentStocks));
cShortages$1 : ((1) .. (5)) +-> BOOL;
dom(cShortages$1) = ((1) .. (5));
((cShortages$1) : (((((1) .. (5))) --> (BOOL))));
cRequiredAmounts$1 : ((1) .. (5)) +-> ((0) .. (4000));
dom(cRequiredAmounts$1) = ((1) .. (5));
((cRequiredAmounts$1) : (((((1) .. (5))) --> (((0) .. (4000))))));
cCurrentStocks$1 : ((1) .. (5)) +-> ((0) .. (4000));
dom(cCurrentStocks$1) = ((1) .. (5));
((cCurrentStocks$1) : (((((1) .. (5))) --> (((0) .. (4000))))))
END
&
THEORY EnumerateX
END
