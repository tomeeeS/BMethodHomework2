/*
Sajti Tamas
CWXY37
*/

IMPLEMENTATION stock_i
REFINES stock

DEFINITIONS
    "definitions.def"
    
IMPORTS
    forklift,
    shortage_classifier
    
VALUES
    MaxStocks = {
        1 |-> 1000 ,
        2 |-> 2000 ,
        3 |-> 500 ,
        4 |-> 125 ,
        5 |-> 4000
    }
    
CONCRETE_VARIABLES
    cCurrentStocks, cShortages, cRequiredAmounts

INVARIANT
    // types
    cCurrentStocks : STOCKS --> NUM_OF_STOCK_TYPE
    & cRequiredAmounts : STOCKS --> NUM_OF_STOCK_TYPE
    & cShortages : (1..5) --> BOOL
    
    // ties to abstract variables
    & cCurrentStocks = CurrentStocks
    & cRequiredAmounts = RequiredAmounts
    
    & dom(cShortages|>{TRUE}) = Shortages
    & dom(cShortages|>{FALSE}) = (STOCKS) - Shortages
       
    // cCurrentStocks
    & dom(cCurrentStocks) = dom(MaxStocks)
    & !ii.(ii: dom(cCurrentStocks) => cCurrentStocks(ii) <= MaxStocks(ii) )
        
    // cShortages
    & !xx.(xx : dom(cShortages |> {TRUE}) => cCurrentStocks(xx) < MaxStocks(xx) / 2)
    & !xx.((xx : dom(cCurrentStocks) & cCurrentStocks(xx) < MaxStocks(xx) / 2) => xx : dom(cShortages |> {TRUE}))
    
    // cRequiredAmounts
    & !ii.(ii: dom(cRequiredAmounts) => cRequiredAmounts(ii) = MaxStocks(ii) - cCurrentStocks(ii))

INITIALISATION
    cCurrentStocks := STOCKS * {0} ;
    cShortages := STOCKS * {TRUE} ;
    cRequiredAmounts := MaxStocks

OPERATIONS
    
    Put(ii, amt) = //Feladat1
    BEGIN
        VAR currentTmp, requiredTmp, shortageTmp IN

            shortageTmp <-- IsOnShortage(
                cShortages,
                cCurrentStocks,
                ii,
                cCurrentStocks(ii) + amt,
                MaxStocks
            );
            
            currentTmp, requiredTmp <--
                MoveStock(cCurrentStocks(ii) + amt, MaxStocks(ii));
                
            cCurrentStocks(ii) := currentTmp;
            cRequiredAmounts(ii) := requiredTmp;
            cShortages := shortageTmp
        END 
    END
    ;


    Pop (ii, amt ) = //Feladat2
    BEGIN
        VAR currentTmp, requiredTmp, shortageTmp IN

            shortageTmp <-- IsOnShortage(
                cShortages,
                cCurrentStocks,
                ii,
                cCurrentStocks(ii) - amt,
                MaxStocks
            );
            
            currentTmp, requiredTmp <--
                MoveStock(cCurrentStocks(ii) - amt, MaxStocks(ii));
                
            cCurrentStocks(ii) := currentTmp;
            cRequiredAmounts(ii) := requiredTmp;
            cShortages := shortageTmp
        END 
    END
    ;

    
    res <-- GetShortage = //Feladat3
        res := cShortages
    ;


    sum <-- GetSum = //Feladat4
    BEGIN
        VAR ii IN
            ii := 0;
            sum := 0;
            
            WHILE ii < 5 DO
                ii := ii + 1;
                sum := sum + cCurrentStocks(ii)
            INVARIANT
                ii : 0..5
                & sum : 0..(ii * 4000)
                & sum = SIGMA(xx).(xx : 1..ii | cCurrentStocks(xx))
            VARIANT
                6 - ii
            END
        END 
    END 
    ;

    res <-- GetRequiredAmount(ii) = // Feladat5
    BEGIN
       res := cRequiredAmounts(ii)
    END

   
 END